{"version":3,"sources":["store/reducers/weatherReducer.js","store/reducers/errorReducer.js","store/reducers/index.js","store/actions/types.js","store/store.js","utils/poseAnimations.js","config/apiKey.js","config/apiConfig.js","utils/regex.js","components/GetWeatherButton/GetWeatherButton.js","components/Container/GetWeather/GetWeather.js","store/actions/weatherActions.js","components/Container/About/About.js","utils/weatherUtil.js","components/WeatherCard/WeatherCard.js","components/Container/ShowCurrentWeather/ShowCurrentWeather.js","components/Forecast/Forecast.js","components/Container/ShowForecast/ShowForecast.js","components/Layout/RouterContainer/RouterContainer.js","components/Layout/MainMenu/MainMenu.js","app/WeatherViewApp.js","serviceWorker.js","index.js"],"names":["initialState","forecast","currentWeather","error","combineReducers","weather","state","arguments","length","undefined","action","type","Object","objectSpread","payload","message","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","apply","Container","posed","div","enter","staggerChildren","RouteTransitionWrapper","opacity","exit","Paragraph","p","x","GetWeatherAnimation","hidden","y","transition","duration","visible","GetForecastAnimation","charPoses","Input","input","focusable","init","scale","focus","Button","hoverable","pressable","boxShadow","hover","press","NavIcon","color","AnchorLink","a","API_KEY","BASE_URL","getCurrentWeatherByZipUrl","zip","concat","getCurrentWeatherByCityUrl","city","getForecastByZipUrl","getForecastByCityUrl","zipRegex","cityRegex","GetWeatherButton","_ref","handleOnClick","isProcessing","react_default","createElement","className","classnames","is-loading","onClick","react_fontawesome_index_es","icon","GetWeather","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchTermChange","e","setState","searchTerm","target","value","checkForValidSearchCity","test","checkForValidSearchZip","onKeyPress","key","getWeather","_this$state","isForecastToggled","invalidSearchText","_this$props","props","getCurrentWeatherByCity","getForecastByCity","getCurrentWeatherByZip","getForecastByZip","clearError","setError","history","onSearchBarFocus","isSearchFocused","onToggleSwitchClick","prevState","invalidSearch","invalidMinLength","invalidMaxLength","selectedSearchParameter","poweredByUrl","isSearchFadedIn","nextProps","nextContext","_this$state2","Fragment","initialPose","pose","href","react_pose_text_es","name","placeholder","onChange","onFocus","components_GetWeatherButton_GetWeatherButton","isMobile","switch_min_default","on","Component","connect","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","data","push","t0","stop","_x","_ref2","_callee2","_context2","_x2","clearWeather","_ref3","_callee3","_context3","_x3","_ref5","_callee5","_context5","_x5","_ref4","_callee4","_context4","_x4","_ref6","_callee6","_context6","_x6","_ref7","_callee7","_context7","_x7","About","rel","convertKelvinToFahrenheit","kelvinTemp","parseInt","getTempRange","highTemp","lowTemp","i","fs","ForecastFilter","filterSnapshot","main","temp","isWeatherResultEmpty","obj","hasOwnProperty","processedForecast","moment","dt_txt","format","assignBarColor","isBefore","weatherSnap","_","pick","tempInt","WeatherCard","angle","description","size","lastIndex","keys","getLatestDescriptionIndex","charAt","toUpperCase","slice","wind","speed","parseFloat","deg","degree","humidity","temp_min","temp_max","ShowCurrentWeather","onBackToSearchClick","currentWeatherEmpty","components_WeatherCard_WeatherCard","Forecast","esm","handleWidth","handleHeight","render","width","lib","colorBars","grid","yAxisOrientRight","axes","axisLabels","height","list","ShowForecast","isForecastEmpty","components_Forecast_Forecast","RouterContainer","Route","location","react_pose_es","pathname","Switch","exact","path","component","MainMenu","role","aria-label","NavLink","to","activeClassName","library","add","faSearchLocation","faArrowLeft","faCloudRain","faCloudSunRain","faCalendarDay","faCalendarWeek","faCalendar","faSearch","WeatherViewApp","es","BrowserRouter","Layout_MainMenu_MainMenu","Layout_RouterContainer_RouterContainer","Boolean","hostname","match","ReactDOM","src_app_WeatherViewApp","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab2e73fb.chunk.js","sourcesContent":["import {\n    GET_CURRENT_WEATHER_BY_CITY,\n    GET_CURRENT_WEATHER_BY_ZIP,\n    CLEAR_WEATHER,\n    GET_FORECAST_BY_ZIP,\n    GET_FORECAST_BY_CITY,\n} from '../actions/types';\n\nconst initialState = {\n    forecast: {},\n    currentWeather: {},\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_CURRENT_WEATHER_BY_ZIP:\n            return {\n                ...state,\n                currentWeather: action.payload,\n            };\n        case GET_CURRENT_WEATHER_BY_CITY:\n            return {\n                ...state,\n                currentWeather: action.payload,\n            };\n        case CLEAR_WEATHER:\n            return {\n                ...state,\n                currentWeather: action.payload,\n                forecast: []\n            };\n        case GET_FORECAST_BY_ZIP:\n            return {\n                ...state,\n                forecast: action.payload,\n            };\n        case GET_FORECAST_BY_CITY:\n            return {\n                ...state,\n                forecast: action.payload,\n            };\n        default:\n            return state;\n    }\n}\n","import { SET_ERROR, CLEAR_ERROR } from '../actions/types';\n\nconst initialState = {\n    error: {}\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SET_ERROR:\n            return {\n                message: action.payload,\n            };\n        case CLEAR_ERROR:\n            return {\n                message: '',\n            };\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport weatherReducer from './weatherReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n    weather: weatherReducer,\n    error: errorReducer\n});","// Weather\nexport const GET_CURRENT_WEATHER_BY_ZIP = \"GET_CURRENT_WEATHER_BY_ZIP\";\nexport const GET_CURRENT_WEATHER_BY_CITY = \"GET_CURRENT_WEATHER_BY_CITY\";\nexport const CLEAR_WEATHER = \"CLEAR_WEATHER\";\nexport const GET_FORECAST_BY_ZIP = \"GET_FORECAST_BY_ZIP\";\nexport const GET_FORECAST_BY_CITY = \"GET_FORECAST_BY_CITY\";\n\n// Error\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\nexport const SET_ERROR = \"SET_ERROR\";","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\n// applying dev tools to chrome only\nif (window.navigator.userAgent.includes('Chrome') && ReactReduxDevTools) {\n    store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(...middleware),\n            ReactReduxDevTools,\n        ),\n    );\n} else {\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\n}\n\nexport default store;\n","import posed from 'react-pose';\n\nexport const Container = posed.div({\n    enter: { staggerChildren: 50 }\n});\n\nexport const RouteTransitionWrapper = posed.div({\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n});\n\nexport const Paragraph = posed.p({\n    enter: {x:20, opacity: 1 },\n    exit: {x:0, opacity: 0 }\n});\n\nexport const GetWeatherAnimation = posed.div({\n    hidden: { y: -10, x: -10, opacity: 0, transition: { duration: 250 } },\n    visible: { y: 0, x: 0, opacity: 1, transition: { duration: 250 } },\n});\n\nexport const GetForecastAnimation = posed.div({\n    hidden: { y: -10, x: -10, opacity: 0},\n    visible: { y: 0, x: 0, opacity: 1, transition: { duration: 2000 } },\n});\n\nexport const charPoses = {\n    exit: { opacity: 0, x: -20 },\n    enter: { opacity: 1, x: 0 }\n};\n\nexport const Input = posed.input({\n    focusable: true,\n    init: {\n        scale: 1\n    },\n    focus: {\n        scale: 1.0125\n    }\n});\n\nexport const Button = posed.div({\n    hoverable: true,\n    pressable: true,\n    init: {\n        scale: 1,\n        boxShadow: '0px 0px 0px rgba(0,0,0,0)'\n    },\n    hover: {\n        scale: 1.0125,\n        boxShadow: '0px 2px 4px rgba(0,0,0,0.2)'\n    },\n    press: {\n        scale: 1.06125,\n        boxShadow: '0px 1px 2px rgba(0,0,0,0.1)'\n    }\n});\n\nexport const NavIcon = posed.div({\n    hoverable: true,\n    pressable: true,\n    init: {\n        color: '#4a4a4a',\n    },\n    hover: {\n        color: '#3273dc',\n    },\n    press: {\n        color: '#3273dc',\n    }\n});\n\nexport const AnchorLink = posed.a({\n    hoverable: true,\n    pressable: true,\n    init: {\n        color: '#3273dc',\n    },\n    hover: {\n        color: '#023ea0',\n    },\n    press: {\n        color: '#023ea0',\n    }\n})\n\n","export const API_KEY = 'd88536a028aaf9d7da1f938f02a6b6ec';","import { API_KEY } from './apiKey';\n\nconst VERSION = '2.5';\nconst CURRENT_WEATHER_API_NAME = 'weather';\nconst FORECAST_API_NAME = 'forecast';\nconst BASE_URL = 'https://api.openweathermap.org/data';\n\nexport const getCurrentWeatherByZipUrl = (zip) => {\n    return `${BASE_URL}/${VERSION}/${CURRENT_WEATHER_API_NAME}?zip=${zip}&appid=${API_KEY}`;\n};\n\nexport const getCurrentWeatherByCityUrl = (city) => {\n    return `${BASE_URL}/${VERSION}/${CURRENT_WEATHER_API_NAME}?q=${city}&appid=${API_KEY}`;\n};\n\nexport const getForecastByZipUrl = (zip) => {\n    return `${BASE_URL}/${VERSION}/${FORECAST_API_NAME}?zip=${zip}&appid=${API_KEY}`;\n};\n\nexport const getForecastByCityUrl = (city) => {\n    return `${BASE_URL}/${VERSION}/${FORECAST_API_NAME}?q=${city}&appid=${API_KEY}`;\n};\n","export const zipRegex = /^(\\d{5})?$/;\nexport const cityRegex = /^[a-zA-Z]+(?:[\\s-][a-zA-Z]+)*$/;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../../utils/poseAnimations';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\n\nconst GetWeatherButton = ({ handleOnClick, isProcessing }) => {\n    return (\n        <Button\n            className={classnames('button is-link', {\n                'is-loading': isProcessing,\n            })}\n            onClick={handleOnClick}\n        >\n            <FontAwesomeIcon icon=\"search\" />\n        </Button>\n    );\n};\n\nGetWeatherButton.propTypes = {\n    handleOnClick: PropTypes.func.isRequired,\n    isProcessing: PropTypes.bool.isRequired,\n};\n\nexport default GetWeatherButton;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './GetWeather.scss';\nimport { connect } from 'react-redux';\nimport Switch from 'react-toggle-switch';\nimport {\n    getCurrentWeatherByZip,\n    getCurrentWeatherByCity,\n    clearWeather,\n    getForecastByCity,\n    getForecastByZip,\n    setError,\n    clearError,\n} from '../../../store/actions/weatherActions';\nimport { zipRegex, cityRegex } from '../../../utils/regex';\nimport { charPoses, GetWeatherAnimation, Input } from '../../../utils/poseAnimations';\nimport SplitText from 'react-pose-text';\nimport GetWeatherButton from '../../GetWeatherButton/GetWeatherButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass GetWeather extends Component {\n    constructor() {\n        super();\n        this.state = {\n            searchTerm: '',\n            invalidSearch: '',\n            invalidMinLength: '',\n            invalidMaxLength: '',\n            selectedSearchParameter: '',\n            poweredByUrl: 'https://openweathermap.org',\n            invalidSearchText: 'Enter a valid City or Zip',\n            isSearchFadedIn: false,\n            isSearchFocused: false,\n            isForecastToggled: false,\n            isProcessing: false,\n        };\n    }\n\n    componentDidMount() {\n        this.setState({ isSearchFadedIn: true });\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        if(nextProps.error.message) {\n            this.setState({ isProcessing: false });\n        }\n    }\n\n    onSearchTermChange = e => {\n        this.setState({\n            searchTerm: e.target.value,\n        });\n    };\n\n    checkForValidSearchCity = searchTerm => {\n        return cityRegex.test(searchTerm);\n    };\n\n    checkForValidSearchZip = searchTerm => {\n        return zipRegex.test(searchTerm);\n    };\n\n    onKeyPress = e => {\n        if (e.key === 'Enter') {\n            this.setState({ isProcessing: true });\n            this.getWeather();\n        }\n    };\n\n    getWeather = () => {\n        const { searchTerm, isForecastToggled, invalidSearchText } = this.state;\n        const {\n            getCurrentWeatherByCity,\n            getForecastByCity,\n            getCurrentWeatherByZip,\n            getForecastByZip,\n            clearError,\n            setError,\n            history,\n        } = this.props;\n\n        if (this.checkForValidSearchCity(searchTerm)) {\n            !isForecastToggled ? getCurrentWeatherByCity(searchTerm, history) : getForecastByCity(searchTerm, history);\n            clearError();\n        } else if (this.checkForValidSearchZip(searchTerm)) {\n            !isForecastToggled ? getCurrentWeatherByZip(searchTerm, history) : getForecastByZip(searchTerm, history);\n            clearError();\n        } else {\n            setError(invalidSearchText);\n        }\n    };\n\n    handleOnClick = () => {\n        this.setState({ isProcessing: true });\n        const { length } = this.state.searchTerm;\n        const { setError } = this.props;\n        length > 2 && length < 50 ? this.getWeather() : setError(this.state.invalidSearchText);\n    };\n\n    onSearchBarFocus = () => {\n        this.setState({ isSearchFocused: true });\n    };\n\n    onToggleSwitchClick = () => {\n        this.props.clearError();\n        this.setState(prevState => {\n            return {\n                isForecastToggled: !prevState.isForecastToggled,\n            };\n        });\n    };\n\n    render() {\n        const { message } = this.props.error;\n        const { isForecastToggled, searchTerm, poweredByUrl, isProcessing } = this.state;\n\n        return (\n            <React.Fragment>\n                <GetWeatherAnimation key=\"search\" className=\"search\" initialPose=\"hidden\" pose=\"visible\">\n                    <div className=\"container\" onKeyPress={this.onKeyPress}>\n                        <section className=\"section\">\n                            {/* All Sizes */}\n                            <div className=\"columns\">\n                                <div className=\"column\">\n                                    <h1 className=\"is-size-2 is-size-3-mobile\">\n                                        <FontAwesomeIcon icon=\"search-location\" />\n                                        &nbsp; WeatherView\n                                    </h1>\n                                    <p className=\"attribution\">\n                                        Powered by <a href={poweredByUrl}>{poweredByUrl}</a>\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"search-type-label is-hidden-mobile\">\n                                <h3 className=\"is-size-6-mobile\">\n                                    Search Type:&nbsp;&nbsp;\n                                    <strong>\n                                        <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                            {!isForecastToggled ? 'Current Weather' : '24 Hour Forecast'}\n                                        </SplitText>\n                                    </strong>\n                                </h3>\n                            </div>\n                            {/* Mobile */}\n                            <div className=\"is-hidden-tablet box\">\n                                <div className=\"field has-addons\">\n                                    <div className=\"control is-expanded\">\n                                        <Input\n                                            name=\"searchTerm\"\n                                            className=\"input has-text-left search-bar\"\n                                            type=\"search\"\n                                            placeholder=\"Enter a City or Zip\"\n                                            value={searchTerm}\n                                            onChange={this.onSearchTermChange}\n                                            onFocus={this.onSearchBarFocus}\n                                        />\n                                        {message && <span className=\"error has-text-info\">{message}</span>}\n                                    </div>\n                                    <div className=\"control\">\n                                        <GetWeatherButton\n                                            isMobile={true}\n                                            handleOnClick={this.handleOnClick}\n                                            isProcessing={isProcessing}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"search-type-label\">\n                                    <h3 className=\"is-size-6-mobile\">\n                                        Search Type:&nbsp;&nbsp;\n                                        <strong>\n                                            <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={charPoses}>\n                                                {!isForecastToggled ? 'Current Weather' : '24 Hour Forecast'}\n                                            </SplitText>\n                                        </strong>\n                                    </h3>\n                                    <div className=\"control mobile-switch\">\n                                        <Switch\n                                            className=\"has-background-link\"\n                                            onClick={this.onToggleSwitchClick}\n                                            on={isForecastToggled}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            {/* Tablet/Desktop */}\n                            <div className=\"box is-hidden-mobile\">\n                                <div className=\"field has-addons\">\n                                    <div className=\"control\">\n                                        <Switch\n                                            className=\"has-background-link desktop-switch\"\n                                            onClick={this.onToggleSwitchClick}\n                                            on={isForecastToggled}\n                                        />\n                                    </div>\n                                    <div className=\"control is-expanded\">\n                                        <Input\n                                            name=\"searchTerm\"\n                                            className=\"input has-text-centered search-bar\"\n                                            type=\"search\"\n                                            placeholder=\"Enter a City or Zip\"\n                                            value={searchTerm}\n                                            onChange={this.onSearchTermChange}\n                                            onFocus={this.onSearchBarFocus}\n                                        />\n                                        {message && <span className=\"error has-text-info\">{message}</span>}\n                                    </div>\n                                    <div className=\"control\">\n                                        <GetWeatherButton\n                                            isMobile={false}\n                                            handleOnClick={this.handleOnClick}\n                                            isProcessing={isProcessing}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </section>\n                    </div>\n                </GetWeatherAnimation>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    searchTerm: state.searchTerm,\n    weather: state.weather,\n    error: state.error,\n});\n\nGetWeather.propTypes = {\n    getCurrentWeatherByZip: PropTypes.func.isRequired,\n    getCurrentWeatherByCity: PropTypes.func.isRequired,\n    clearWeather: PropTypes.func.isRequired,\n    getForecastByZip: PropTypes.func.isRequired,\n    getForecastByCity: PropTypes.func.isRequired,\n    setError: PropTypes.func.isRequired,\n    clearError: PropTypes.func.isRequired,\n};\n\nexport default connect(\n    mapStateToProps,\n    {\n        getCurrentWeatherByZip,\n        getCurrentWeatherByCity,\n        clearWeather,\n        getForecastByCity,\n        getForecastByZip,\n        setError,\n        clearError,\n    },\n)(GetWeather);\n","import axios from 'axios';\nimport {\n    GET_CURRENT_WEATHER_BY_ZIP,\n    GET_CURRENT_WEATHER_BY_CITY,\n    GET_FORECAST_BY_CITY,\n    GET_FORECAST_BY_ZIP,\n    CLEAR_WEATHER,\n    SET_ERROR,\n    CLEAR_ERROR,\n} from './types';\nimport {\n    getCurrentWeatherByCityUrl,\n    getCurrentWeatherByZipUrl,\n    getForecastByCityUrl,\n    getForecastByZipUrl,\n} from '../../config/apiConfig';\n\nexport const getCurrentWeatherByZip = (zip, history) => async dispatch => {\n    try {\n        const res = await axios.get(getCurrentWeatherByZipUrl(zip));\n        dispatch({\n            type: GET_CURRENT_WEATHER_BY_ZIP,\n            payload: res.data,\n        });\n        history.push('/weather-view/current');\n    } catch (error) {\n        dispatch({\n            type: SET_ERROR,\n            payload: 'No location found for that zip',\n        });\n        history.push('/');\n    }\n};\n\nexport const getCurrentWeatherByCity = (city, history) => async dispatch => {\n    try {\n        const res = await axios.get(getCurrentWeatherByCityUrl(city));\n        dispatch({\n            type: GET_CURRENT_WEATHER_BY_CITY,\n            payload: res.data,\n        });\n        history.push('/weather-view/current');\n    } catch (error) {\n        dispatch({\n            type: SET_ERROR,\n            payload: 'No location found for that city',\n        });\n        history.push('/');\n    }\n};\n\nexport const clearWeather = () => async dispatch => {\n    dispatch({\n        type: CLEAR_WEATHER,\n        payload: {},\n    });\n};\n\nexport const getForecastByZip = (zip, history) => async dispatch => {\n    try {\n        const res = await axios.get(getForecastByZipUrl(zip));\n        dispatch({\n            type: GET_FORECAST_BY_ZIP,\n            payload: res.data,\n        });\n        history.push('/weather-view/forecast');\n    } catch (error) {\n        dispatch({\n            type: SET_ERROR,\n            payload: 'No location found for that zip',\n        });\n        history.push('/weather-view');\n    }\n};\n\nexport const getForecastByCity = (city, history) => async dispatch => {\n    try {\n        const res = await axios.get(getForecastByCityUrl(city));\n        dispatch({\n            type: GET_FORECAST_BY_CITY,\n            payload: res.data,\n        });\n        history.push('/weather-view/forecast');\n    } catch (error) {\n        dispatch({\n            type: SET_ERROR,\n            payload: 'No location found for that city',\n        });\n        history.push('/');\n    }\n};\n\nexport const setError = error => async dispatch => {\n    dispatch({\n        type: SET_ERROR,\n        payload: error,\n    });\n};\n\nexport const clearError = () => async dispatch => {\n    dispatch({\n        type: CLEAR_ERROR,\n        payload: {},\n    });\n};\n","import React from 'react';\nimport { Container, Paragraph, AnchorLink } from '../../../utils/poseAnimations';\n\nconst About = () => (\n    <Container>\n        <div className=\"container\">\n            <section className=\"section\">\n                <div className=\"columns\">\n                    <div className=\"column is-10-mobile is-offset-1-mobile is-8 is-offset-2\">\n                        <h1 className=\"is-size-2 is-size-3-mobile\">What is WeatherView?</h1>\n                        <Paragraph className=\"is-italic\">\n                        <span className=\"subtitle\">\n                            \"A neat little React/Redux app to search current and future weather\"\n                        </span>\n                        </Paragraph><br/>\n                        <Paragraph>\n                            This app is powered by the <strong>OpenWeatherMap Weather API</strong>.\n                            Visit this link to create your own free API key.\n                            <br/><br/><AnchorLink href={'https://openweathermap.org/api'}>https://openweathermap.org/api</AnchorLink>.\n                            <br/><br/>This is a fantastic free\n                            API for building fun projects like this one.\n                        </Paragraph><br/>\n                        <h2 className=\"is-size-4\">Featured Libraries</h2>\n                        <Paragraph>\n                            <AnchorLink\n                                href=\"https://github.com/axios/axios\" rel=\"noopener noreferrer\" target=\"_blank\">Axios\n                            </AnchorLink><br/>\n                            <AnchorLink href=\"https://bulma.io/\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">Bulma</AnchorLink><br/>\n                            <AnchorLink href=\"https://lodash.com/\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">Lodash</AnchorLink><br/>\n                            <AnchorLink href=\"https://momentjs.com/\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">Moment</AnchorLink><br/>\n                            <AnchorLink href=\"https://github.com/sass/node-sass\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">Node Sass</AnchorLink><br/>\n                            <AnchorLink href=\"https://reactjs.org/\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">React</AnchorLink><br/>\n                            <AnchorLink href=\"https://reactjs.org/\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">React-Router</AnchorLink><br/>\n                            <AnchorLink href=\"https://redux.js.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Redux\n                            </AnchorLink><br/>\n                            <AnchorLink href=\"https://github.com/reduxjs/redux-thunk\" rel=\"noopener noreferrer\" target=\"_blank\">Thunk\n                            </AnchorLink><br/>\n                            <AnchorLink href=\"https://rma-consulting.github.io/react-easy-chart/\"\n                                        rel=\"noopener noreferrer\" target=\"_blank\">React Easy Chart</AnchorLink><br/>\n                            <AnchorLink href=\"https://github.com/maslianok/react-resize-detector\"\n                                        rel=\"noopener noreferrer\" target=\"_blank\">React Resize Detector</AnchorLink><br/>\n                            <AnchorLink href=\"https://www.npmjs.com/package/react-toggle-switch\"\n                                        rel=\"noopener noreferrer\" target=\"_blank\">React Toggle Switch</AnchorLink><br/>\n                            <AnchorLink href=\"https://origin.fontawesome.com/how-to-use/on-the-web/using-with/react\"\n                                        rel=\"noopener noreferrer\" target=\"_blank\">React Font Awesome</AnchorLink><br/>\n                            <AnchorLink href=\"https://www.npmjs.com/package/react-toggle-switch\"\n                                        rel=\"noopener noreferrer\" target=\"_blank\">React Toggle Switch</AnchorLink><br/><br/>\n                            A big thanks to <strong>PopMotion</strong>, all the animations are done with Pose for React.<br/>\n                            What a fantastic high level library!<br/><br/>\n                            <AnchorLink href=\"https://popmotion.io/pose/\"\n                                        rel=\"noopener noreferrer\" target=\"_blank\">POSE</AnchorLink><br/>\n                        </Paragraph>\n                        <hr/>\n                        <Paragraph>\n                            <strong>Created By:</strong>&nbsp;Josh Butkovic<br/>\n                            <strong>Github:</strong>&nbsp;\n                            <AnchorLink href=\"https://github.com/joshbutkovic\" rel=\"noopener noreferrer\"\n                                        target=\"_blank\">https://github.com/joshbutkovic</AnchorLink><br/>\n                            <strong>Gmail:</strong>&nbsp;\n                            <AnchorLink href=\"mailto:joshbutkovic@gmail.com?subject=A Message From WeatherView\">\n                                joshbutkovic@gmail.com\n                            </AnchorLink>\n                        </Paragraph>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </Container>\n);\n\nexport default About;","import moment from 'moment';\nimport _ from 'lodash';\n\nexport const convertKelvinToFahrenheit = kelvinTemp => {\n    return parseInt(1.8 * (kelvinTemp - 273) + 32);\n};\n\nexport const capitalizeFirstLetter = description => {\n    return description.charAt(0).toUpperCase() + description.slice(1);\n};\n\nexport const getCurrentTime = () => {\n    return moment().format('h:mmA');\n};\n\nexport const getWindDirection = angle => {\n    let segments = 8;\n    let degree = 360 / segments;\n    angle = angle + degree / 2;\n\n    if (angle >= 0 && angle < degree) {\n        return 'N';\n    } else if (angle >= degree && angle < 2 * degree) {\n        return 'NE';\n    } else if (angle >= 2 * degree && angle < 3 * degree) {\n        return 'E';\n    } else if (angle >= 3 * degree && angle < 4 * degree) {\n        return 'SE';\n    } else if (angle >= 4 * degree && angle < 5 * degree) {\n        return 'S';\n    } else if (angle >= 5 * degree && angle < 6 * degree) {\n        return 'SW';\n    } else if (angle >= 6 * degree && angle < 7 * degree) {\n        return 'W';\n    } else if (angle >= 7 * degree && angle < 8 * degree) {\n        return 'NW';\n    } else {\n        return 'N';\n    }\n};\n\nexport const getLatestDescriptionIndex = weather => {\n    let lastIndex = Object.keys(weather)[Object.keys(weather).length - 1];\n    return parseInt(lastIndex);\n};\n\nexport const getTempRange = forecast => {\n    let highTemp = 0,\n        lowTemp = 0;\n    for (let i = 0; i < 12; i++) {\n        let fs = ForecastFilter.filterSnapshot(forecast[i]);\n        fs.y = convertKelvinToFahrenheit(parseInt(fs.main.temp));\n        if(i === 0) {\n            highTemp = fs.y;\n            lowTemp = fs.y;\n        } else {\n            if(fs.y < lowTemp) {\n                lowTemp = fs.y;\n            }\n            if(fs.y > highTemp) {\n                highTemp = fs.y;\n            }\n        }\n    }\n    return {\n        lowTemp,\n        highTemp\n    };\n};\n\nexport const isWeatherResultEmpty = obj => {\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key)) return false;\n    }\n    return true;\n};\n\nexport const ForecastFilter = {\n    init: (forecast) => {\n        let processedForecast = [];\n\n        for (let i = 0; i < 12; i++) {\n            let fs = ForecastFilter.filterSnapshot(forecast[i]);\n            fs.x = moment(fs.dt_txt).format('M/D ha');\n            fs.y = convertKelvinToFahrenheit(parseInt(fs.main.temp));\n            fs.color = ForecastFilter.assignBarColor(convertKelvinToFahrenheit(parseInt(fs.main.temp)));\n            if (!moment(fs.dt_txt).isBefore(moment().format())) {\n                delete fs.dt_txt;\n                delete fs.main;\n                processedForecast.push(fs);\n            }\n        }\n        return processedForecast;\n    },\n    filterSnapshot: (weatherSnap) => {\n        let allowed = ['dt_txt', \"main['temp']\"];\n        return _.pick(weatherSnap, allowed);\n    },\n    assignBarColor: (temp) => {\n        let tempInt = parseInt(temp);\n        if((tempInt < 20)) {\n            return '#0500ff';\n        } else if ((tempInt > 20) && (tempInt < 30)) {\n            return '#00b4ff';\n        } else if ((tempInt > 30) && (tempInt < 50)) {\n            return '#00ff83';\n        } else if ((tempInt > 50) && (tempInt < 70)) {\n            return '#17ff00';\n        } else if ((tempInt > 70) && (tempInt < 90)) {\n            return '#FFdc00';\n        } else if (tempInt > 90) {\n            return '#FF7800';\n        } else {\n            return '#00ffd0\"';\n        }\n    }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './WeatherCard.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    capitalizeFirstLetter,\n    getLatestDescriptionIndex,\n    getWindDirection,\n    convertKelvinToFahrenheit,\n    getCurrentTime,\n} from '../../utils/weatherUtil';\n\nconst WeatherCard = props => {\n    const { weather } = props;\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-content\">\n                <div className=\"media\">\n                    <div className=\"media-left\">\n                        <figure className=\"image is-48x48\">\n                            <FontAwesomeIcon icon=\"cloud-sun-rain\" size=\"3x\"/>\n                        </figure>\n                    </div>\n                    <div className=\"media-content\">\n                        <p className=\"title is-3\">{weather.name}</p>\n                    </div>\n                </div>\n                <div className=\"content\">\n                    <p className=\"subtitle is-4\">\n                        <span className=\"has-text-primary has-text-weight-bold is-2 current-temp\">\n                            {convertKelvinToFahrenheit(weather.main.temp)}\n                        </span>\n                        &nbsp;&deg;F&nbsp;\n                        {capitalizeFirstLetter(weather.weather[getLatestDescriptionIndex(weather.weather)].description)}\n                    </p>\n                    <p className=\"subtitle is-4\"/>\n                    <div className=\"columns\">\n                        <div className=\"column\">\n                            <p className=\"subtitle is-6\">\n                                <strong>Wind</strong>: {weather.wind.speed}\n                                &nbsp; MPH&nbsp;\n                                {getWindDirection(parseFloat(weather.wind.deg))}\n                            </p>\n                        </div>\n                        <div className=\"column\">\n                            <p className=\"subtitle is-6\">\n                                <strong>Humidity</strong>\n                                :&nbsp;\n                                {weather.main.humidity}\n                                &#37;\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"columns\">\n                        <div className=\"column\">\n                            <strong>Low Temp</strong>\n                            :&nbsp;\n                            <span className=\"has-text-link has-text-weight-bold is-3\">\n                                {convertKelvinToFahrenheit(weather.main.temp_min)}\n                            </span>\n                            &nbsp;&deg;F&nbsp;\n                        </div>\n                        <div className=\"column\">\n                            <strong>High Temp</strong>\n                            :&nbsp;\n                            <span className=\"has-text-danger has-text-weight-bold is-3\">\n                                {convertKelvinToFahrenheit(weather.main.temp_max)}\n                            </span>\n                            &nbsp;&deg;F&nbsp;\n                        </div>\n                    </div>\n                    <div className=\"columns\">\n                        <div className=\"column\">\n                            <p className=\"is-badge-small has-text-grey-light\">{getCurrentTime()}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nWeatherCard.propTypes = {\n    weather: PropTypes.object.isRequired,\n};\n\nexport default WeatherCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, GetWeatherAnimation } from '../../../utils/poseAnimations';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isWeatherResultEmpty } from '../../../utils/weatherUtil';\nimport WeatherCard from '../../WeatherCard/WeatherCard';\n\nclass ShowCurrentWeather extends Component {\n    componentDidMount() {\n        const { currentWeather } = this.props.weather;\n        if (isWeatherResultEmpty(currentWeather)) {\n            this.props.history.push('/');\n        }\n    }\n\n    onBackToSearchClick = () => {\n        this.props.history.push('/weather-view');\n    };\n\n    render() {\n        const { currentWeather } = this.props.weather;\n        const currentWeatherEmpty = isWeatherResultEmpty(currentWeather);\n\n        return (\n            <React.Fragment>\n                {!currentWeatherEmpty && (\n                    <GetWeatherAnimation key=\"weather\" className=\"weather\" initialPose=\"hidden\" pose=\"visible\">\n                        <div className=\"container\">\n                            <section className=\"section\">\n                                <Button className=\"button is-small is-link\" onClick={this.onBackToSearchClick}>\n                                    <FontAwesomeIcon icon=\"arrow-left\" />\n                                    &nbsp;Back to Search\n                                </Button>\n                                <WeatherCard weather={currentWeather} />\n                            </section>\n                        </div>\n                    </GetWeatherAnimation>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    weather: state.weather,\n    error: state.error,\n});\n\nShowCurrentWeather.propTypes = {\n    weather: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(ShowCurrentWeather);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Forecast.scss';\nimport { BarChart } from 'react-easy-chart';\nimport { ForecastFilter, getTempRange } from '../../utils/weatherUtil';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ReactResizeDetector from 'react-resize-detector';\n\nclass Forecast extends Component {\n    render() {\n        const { name } = this.props.forecast.city;\n        return (\n            <ReactResizeDetector\n                handleWidth\n                handleHeight\n                render={({ width }) => (\n                    <React.Fragment>\n                        <div className=\"media\">\n                            <div className=\"media-left\">\n                                <figure className=\"image is-48x48\">\n                                    <FontAwesomeIcon icon=\"cloud-sun-rain\" size=\"3x\" />\n                                </figure>\n                            </div>\n                            <div className=\"media-content\">\n                                <p className=\"title is-3\">{name}</p>\n                                <p className=\"subtitle\">24 Hour Forecast</p>\n                            </div>\n                        </div>\n                        <div className=\"bar-chart-wrapper\">\n                            <BarChart\n                                colorBars\n                                grid\n                                yAxisOrientRight\n                                axes={width > 530}\n                                axisLabels={{ x: 'Time', y: 'Temp Fahrenheit' }}\n                                width={width}\n                                height={480}\n                                data={ForecastFilter.init(this.props.forecast.list)}\n                            />\n                            <div className=\"is-hidden-tablet is-mobile columns\">\n                                <div className=\"column is-half-mobile\">\n                                    <label className=\"is-size-5\">Low:</label>&nbsp;\n                                    <span className=\"is-size-5 has-text-info has-text-weight-bold\">\n                                        {getTempRange(this.props.forecast.list).lowTemp}&nbsp;&deg;F&nbsp;\n                                    </span>\n                                </div>\n                                <div className=\"column is-half-mobile\">\n                                    <label className=\"is-size-5\">High:</label>&nbsp;\n                                        <span className=\"is-size-5 has-text-danger has-text-weight-bold\">\n                                            {getTempRange(this.props.forecast.list).highTemp}&nbsp;&deg;F&nbsp;\n                                        </span>\n                                </div>\n                            </div>\n                        </div>\n                    </React.Fragment>\n                )}\n            />\n        );\n    }\n}\n\nForecast.propTypes = {\n    forecast: PropTypes.object.isRequired,\n};\n\nexport default Forecast;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './ShowForecast.scss';\nimport { Button, GetForecastAnimation } from '../../../utils/poseAnimations';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { isWeatherResultEmpty } from '../../../utils/weatherUtil';\nimport Forecast from '../../Forecast/Forecast';\n\nclass ShowForecast extends Component {\n    componentDidMount() {\n        const { forecast } = this.props.weather;\n        if (isWeatherResultEmpty(forecast)) {\n            this.props.history.push('/');\n        }\n    }\n\n    onBackToSearchClick = () => {\n        this.props.history.push('/weather-view');\n    };\n\n    render() {\n        const { forecast } = this.props.weather;\n        const isForecastEmpty = isWeatherResultEmpty(forecast);\n\n        return (\n            <React.Fragment>\n                {!isForecastEmpty && (\n                    <GetForecastAnimation key=\"forecast\" className=\"forecast\" initialPose=\"hidden\" pose=\"visible\">\n                        <div className=\"container\">\n                            <section className=\"section\">\n                                <Button className=\"button is-small is-link\" onClick={this.onBackToSearchClick}>\n                                    <FontAwesomeIcon icon=\"arrow-left\" />\n                                    &nbsp; Back to Search\n                                </Button>\n                                <Forecast forecast={forecast} />\n                            </section>\n                        </div>\n                    </GetForecastAnimation>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    weather: state.weather,\n    error: state.error,\n});\n\nShowForecast.propTypes = {\n    weather: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(ShowForecast);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { PoseGroup } from 'react-pose';\nimport { RouteTransitionWrapper } from '../../../utils/poseAnimations';\nimport GetWeather from '../../Container/GetWeather/GetWeather';\nimport About from '../../Container/About/About';\nimport ShowCurrentWeather from '../../Container/ShowCurrentWeather/ShowCurrentWeather';\nimport ShowForecast from '../../Container/ShowForecast/ShowForecast';\n\nconst RouterContainer = () => {\n    return (\n        <Route\n            render={({ location }) => (\n                <PoseGroup>\n                    <RouteTransitionWrapper key={location.pathname}>\n                        <Switch location={location}>\n                            <Route exact path=\"/weather-view/\" component={GetWeather} key={'get'} />\n                            <Route exact path=\"/weather-view/about\" component={About} key={'about'} />\n                            <Route path=\"/weather-view/current\" component={ShowCurrentWeather} key={'current'} />\n                            <Route path=\"/weather-view/forecast\" component={ShowForecast} key={'forecast'} />\n                        </Switch>\n                    </RouteTransitionWrapper>\n                </PoseGroup>\n            )}\n        />\n    );\n};\n\nRouterContainer.propTypes = {\n    location: PropTypes.object,\n};\n\nexport default RouterContainer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './MainMenu.scss';\nimport { NavIcon } from '../../../utils/poseAnimations';\n\nconst MainMenu = () => {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <NavLink exact to=\"/weather-view\" className=\"navbar-item\" activeClassName=\"is-active\">\n                    <NavIcon>\n                        <FontAwesomeIcon icon=\"cloud-sun-rain\" size=\"2x\" />\n                    </NavIcon>\n                </NavLink>\n                <NavLink to=\"/weather-view/about\" className=\"navbar-item\" activeClassName=\"is-active\">\n                    <NavIcon>\n                        <span className=\"has-text-weight-semibold is-size-5\">About</span>\n                    </NavIcon>\n                </NavLink>\n            </div>\n        </nav>\n    );\n};\n\nexport default MainMenu;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport './WeatherViewApp.scss';\nimport store from '../store/store';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faSearchLocation, faArrowLeft, faCloudRain, faCloudSunRain,\n    faCalendarDay, faCalendarWeek, faCalendar, faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport RouterContainer from '../components/Layout/RouterContainer/RouterContainer';\nimport MainMenu from '../components/Layout/MainMenu/MainMenu';\n\nlibrary.add(faSearchLocation, faArrowLeft, faCloudRain,\n    faCloudSunRain, faCalendarDay, faCalendarWeek, faCalendar, faSearch);\n\nclass WeatherViewApp extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <Router>\n                    <div className=\"WeatherViewApp\">\n                        <MainMenu />\n                        <RouterContainer />\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default WeatherViewApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the WeatherViewApp load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web WeatherViewApp is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different WeatherViewApp. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport WeatherViewApp from './app/WeatherViewApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<WeatherViewApp />, document.getElementById('weatherViewRoot'));\nserviceWorker.unregister();\n"],"sourceRoot":""}